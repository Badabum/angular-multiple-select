angular.module("bz.select-multiple",["angular.filter"]);
angular.module("bz.select-multiple")
    .directive('bzSelectMultiple',['$parse', function($parse){
        var selectOption = function(selectedCollection, item){
           selectedCollection.push(item);
        }
        var selectAll = function(allItems,selectedCollection,id){
            _.forEach(allItems,function(item){
                var index = _.findIndex(selectedCollection,function(selectedItem){
                    return selectedItem[id]===item[id];
                })
                if(index===-1){
                    selectedCollection.push(item);
                }
            });
        }
        var unselectAll = function(selectedCollection){
            selectedCollection.splice(0,selectedCollection.length);
        }
        var filterItems = function(allItems, filterParam, label){
            var result = [];
            for(var i = 0;i<allItems.length;i++){
                if(allItems[i][label].indexOf(filterParam)>-1){
                    result.push(allItems[i]);
                }
            }
            return result;
        }
        var isSelected = function(item,selectedItems,id){
            var index = _.findIndex(selectedItems,function(selectedItem){
                return selectedItem[id]===item[id];
            })
            return index>-1;
        }
        var unselectItem = function(selectedCollection,item,id){
            var index = _.findIndex(selectedCollection,function(selectedItem){
                return selectedItem[id]===item[id];
            })
            if(index>-1){
                selectedCollection.splice(index,1);
            }
        }
        var activate = function(allItems,selectedItems,id){

        }
        return{
            restrict:"E",
            replace:true,
            templateUrl:"/src/tmpl/bz-select-multiple.html",
            require:"ngModel",
            scope:{
                items:"=items",
                multiple:"=multiple",
                checkAll:"=checkAll",
                placeholder:"=placeholder",
                selectedMode:"=selectedMode",
                searchEnabled:"=searchEnabled",
                selectedCollection:"=ngModel",
                label:"=label",
                id:"=id"
            },
            link:function(scope,element,attrs,ngModel){

                scope.filterString = {text:""};
                scope.opened = false;
                scope.unselectOption = function(item){
                    unselectItem(scope.selectedCollection,item,scope.id);
                    delete item.selected;
                    ngModel.$setViewValue(scope.selectedCollection);
                }
                scope.advancedOptionsEnabled = scope.checkAll|scope.searchEnabled;
                scope.selectOption = function(item){
                    selectOption(scope.selectedCollection,item);
                    ngModel.$setViewValue(scope.selectedCollection);
                }
                scope.isSelected = function(item){
                    return isSelected(item,scope.selectedCollection,scope.id);
                }
                scope.openSelect = function(){
                    scope.opened=!scope.opened;
                }
                scope.selectAll  = function(){
                    selectAll(scope.items,scope.selectedCollection,scope.id);
                    ngModel.$setViewValue(scope.selectedCollection);
                }
                scope.unselectAll = function(){
                    unselectAll(scope.selectedCollection);
                    ngModel.$setViewValue(scope.selectedCollection);
                }
            }
        }
}]);angular.module('bz.select-multiple').run(['$templateCache', function($templateCache) {
  'use strict';

  $templateCache.put('/templates/bz-select-multiple.html',
    "<div class=\"bz-select-multiple container\"><div class=\"selection-container\"><span class=\"placeholder\" ng-bind=\"placeholder\" ng-show=\"selectedCollection.length===0\">Select options...</span> <span class=\"selected-options-container\" ng-if=\"selectedCollection.length!==0\"><span class=\"selected-item-template\" ng-repeat=\"item in selectedCollection\"><span ng-bind=\"item[label]\"></span> <i class=\"ion-close\" ng-click=\"unselectOption(item)\"></i></span></span> <i class=\"ion-chevron-down select-arrow\" ng-click=\"openSelect()\"></i></div><div class=\"clear\"></div><div class=\"options-container\" ng-show=\"opened\"><div class=\"advanced-options\" ng-if=\"advancedOptionsEnabled\"><ul class=\"advanced-options-container\"><li class=\"advanced-option\" ng-if=\"searchEnabled\"><input type=\"text\" class=\"search-input\" ng-model=\"filterString.text\" placeholder=\"Search...\"></li><li class=\"advanced-option\" ng-if=\"checkAll\"><button class=\"advanced-option-btn select-all-btn\" ng-click=\"selectAll()\">select all</button> <button class=\"advanced-option-btn unselect-all-btn\" ng-click=\"unselectAll()\">unselect all</button></li><!--\r" +
    "\n" +
    "                <li class=\"advanced-option\" ng-if=\"checkAll\">\r" +
    "\n" +
    "                    \r" +
    "\n" +
    "                </li>\r" +
    "\n" +
    "--><hr></ul></div><div class=\"option\" ng-repeat=\"item in items|filterBy:[label]:filterString.text\" ng-click=\"!item.selected&&selectOption(item)\" ng-class=\"{'selected':isSelected(item)}\"><span class=\"option-label\">{{item[label]}}</span></div></div></div>"
  );

}]);
